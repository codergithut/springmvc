<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <beans>

        <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
            <!-- 基本属性 url、user、password -->
            <property name="url" value="${bdcdj.db.url}" />
            <property name="username" value="${bdcdj.db.username}" />
            <property name="password" value="${bdcdj.db.password}" />

            <property name="defaultAutoCommit" value="false"/>
            <property name="defaultTransactionIsolation" value="2"/>

            <!-- 配置初始化大小、最小、最大 -->
            <property name="initialSize" value="10" />
            <property name="minIdle" value="10" />
            <property name="maxActive" value="100" />

            <!-- 配置获取连接等待超时的时间 -->
            <property name="maxWait" value="10000" />

            <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
            <property name="timeBetweenEvictionRunsMillis" value="60000" />

            <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
            <property name="minEvictableIdleTimeMillis" value="300000" />

            <property name="validationQuery" value="SELECT SYSDATE FROM DUAL" />
            <property name="testWhileIdle" value="true" />
            <property name="testOnBorrow" value="false" />
            <property name="testOnReturn" value="false" />

            <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
            <property name="poolPreparedStatements" value="true" />
            <property name="maxPoolPreparedStatementPerConnectionSize" value="20" />

            <property name="removeAbandoned" value="true"/>
            <property name="removeAbandonedTimeout" value="1800" />
            <property name="logAbandoned" value="true" />

            <!-- 配置监控统计拦截的filters，去掉后监控界面sql无法统计 -->
            <property name="filters" value="stat" />
        </bean>

        <bean id="sqlSessionFactory" class="org.webSource.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource" />
            <property name="configLocation"  value="classpath:conf/webSource.mybatis/webSource.mybatis-configuration.xml" />
        </bean>
        <bean id="sqlSessionTemplate" class="org.webSource.mybatis.spring.SqlSessionTemplate" scope="prototype">
            <constructor-arg ref="sqlSessionFactory"/>
        </bean>


        <bean name="mapperScannerConfigurer" class="org.webSource.mybatis.spring.mapper.MapperScannerConfigurer" >
            <property name="basePackage" value="cn.gtmap.estateplat.tax.mapper" />
            <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        </bean>

        <!--<bean id="mybatisPaginationInterceptor"-->
              <!--class="cn.gtmap.estateplat.core.support.webSource.mybatis.page.PaginationInterceptor">-->
            <!--<property name="properties">-->
                <!--<props>-->
                    <!--<prop key="dialect">oracle</prop>-->
                    <!--<prop key="stmtIdRegex">*.*ByPage</prop>-->
                <!--</props>-->
            <!--</property>-->
        <!--</bean>-->

    </beans>




</beans>